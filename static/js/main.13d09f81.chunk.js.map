{"version":3,"sources":["components/UI/Card.js","components/Expense/ExpensesFilter.js","components/Expense/ExpenseDate.js","components/Expense/ExpenseItem.js","components/Expense/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expense/ExpensesChart.js","components/Expense/Expense.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","allclass","className","children","ExpensesFilter","value","secondprop","onChange","event","onChangeItem","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","Id","ChartBar","fillHeight","maxValue","Math","round","style","height","label","Chart","eachval","item","totalmax","max","ExpenseChart","ChartData","expenses","getMonth","Expenses","useState","year1","year2","filteredYearExpenses","filter","x","toString","ExpenseForm","enteredTitle","EnteredTitle","enteredAmount","EnteredAmount","enteredDate","EnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","id","min","step","onClick","onCancel","NewExpense","isEditing","setEditing","fromExpenseForm","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevState","Expense","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.13d09f81.chunk.js","sourcesContent":["import \"./Card.css\"\r\nimport React from \"react\";\r\n\r\nfunction Card(props) {\r\n    var allclass = \"card \"+ props.className;                //so here we added 2 css classes (\"card\") and (props.className = \"expense-item\")\r\n    return <div className={allclass}>{props.children}</div>   \r\n\r\n    //{props.children} needed as props don't work same as html tags\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const myfunc = (event) => {\r\n        props.onChangeItem(event.target.value); //\"onChangeItem\" is in Expense.js's <expensesFilter>\r\n    };\r\n\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={props.secondprop} onChange={myfunc}>\r\n                    <option value='2025'>2025</option>\r\n                    <option value='2024'>2024</option>\r\n                    <option value='2023'>2023</option>\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ExpenseDate.css\";\r\nimport React from \"react\";\r\n\r\nfunction ExpenseDate(props) {\r\n\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport React from \"react\";    //{ useState} is used for state concept if.e to reload a web page after being rendered\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n  //const [title, setTitle] = useState(props.title);    //important as this array should have exactly 2 elements\r\n  //one before update, another after update\r\n\r\n  // function myclick() {\r\n  //   setTitle('Updated!');       //when clicked, value will be changes as ExpenseItem() will reexecute \r\n  //   console.log(title);\r\n  // }\r\n\r\n  return (\r\n    <li><Card className='expense-item'>              {/* Card is a custom component as a result 'Card's css will take precidence than 'expense-item' css*/}\r\n    <ExpenseDate date={props.date}></ExpenseDate>\r\n    <div className='expense-item__description'>\r\n      <h2>{props.title}</h2>\r\n      <div className='expense-item__price'>${props.amount}</div>\r\n    </div>\r\n    {/* <button onClick={myclick}>Click here</button> */}\r\n  </Card></li>\r\n    \r\n  );\r\n}\r\n\r\nexport default ExpenseItem; ","import ExpenseItem from \"./ExpenseItem\";\r\nimport React from \"react\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = props =>{\r\n  \r\n\r\n    if(props.items.length === 0){\r\n        return (<h2 className=\"expenses-list__fallback\">\r\n                    Not Found\r\n                </h2>);\r\n    }\r\n     \r\n\r\n    return (<ul className=\"expenses-list\">\r\n                {props.items.map(expense =>\r\n                <ExpenseItem \r\n            //we have to add a identifier so that react can add new objects\r\n                    key = {expense.Id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date} >\r\n                </ExpenseItem>)}\r\n            </ul>);\r\n};\r\n\r\nexport default ExpensesList ;","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = props => {\r\n\r\n    let fillHeight = '0%';\r\n    if(props.maxValue > 0){\r\n        fillHeight = Math.round((props.value/props.maxValue) *100)+ '%';     //find the percentage of height and round up\r\n    }\r\n\r\n    return <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height: fillHeight}}>      \r\n                            {/* above is dynamic height for css class \"chart-bar__fill\" */}\r\n            </div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">\r\n            {props.label}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\nconst Chart = props => {\r\n    const eachval = props.items.map(item=> item.value);     //will update \" props.items\" array to only array of numbers of \"item.value i.q 12 int values\"\r\n    const totalmax = Math.max(...eachval);\r\n\r\n    return <div className=\"chart\">\r\n        {props.items.map(items => \r\n        <ChartBar\r\n            key={items.label}\r\n            value={items.value}\r\n            maxValue={totalmax}     //add totalmax here\r\n            label={items.label} >\r\n        </ChartBar>)}\r\n        {/* we are doing above like this to render as many <ChartBar> compnents as required in props */}\r\n    </div>;\r\n};\r\n\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = props =>{\r\n    \r\n    const ChartData = [\r\n        {label:'Jan',value:0},\r\n        {label:'Feb',value:0},    \r\n        {label:'Mar',value:0},    \r\n        {label:'Apr',value:0},    \r\n        {label:'May',value:0},    \r\n        {label:'June',value:0},    \r\n        {label:'July',value:0},    \r\n        {label:'Aug',value:0},    \r\n        {label:'Sept',value:0},    \r\n        {label:'Oct',value:0},    \r\n        {label:'Nov',value:0},    \r\n        {label:'Dec',value:0},    \r\n\r\n    ];\r\n    //use \"for of\" loop for getMonth()\r\n    for(const expense of props.expenses){       //from parent, retrive monyh and update that month's value to (expense.amount)\r\n        const month = expense.date.getMonth();  //jan =0, feb =1\r\n        ChartData[month].value += expense.amount;\r\n    }\r\n\r\n    return <Chart items={ChartData}></Chart>        //items prop used in child Chart.js and send ChartData[]\r\n};\r\n\r\nexport default ExpenseChart;","\r\nimport Card from \"../UI/Card\";\r\nimport React, {useState} from \"react\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpenseChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {  //props contain all the data from parent\r\n\r\n    const [year1,year2] = useState('2020');\r\n    const myfunc = year =>{\r\n        // console.log(year);\r\n        // console.log('Expense.js');\r\n        year2(year);\r\n    };\r\n\r\n    const filteredYearExpenses = props.items.filter( x => {\r\n        return x.date.getFullYear().toString() === year1;\r\n    });\r\n\r\n    \r\n     \r\n    return(\r\n    <Card className='expenses'>\r\n        <ExpensesFilter secondprop={year1} onChangeItem = {myfunc}></ExpensesFilter>\r\n        <ExpenseChart expenses= {filteredYearExpenses}></ExpenseChart>\r\n        <ExpensesList items = {filteredYearExpenses}></ExpensesList>\r\n        {/* <ExpenseItem\r\n            title={props.items[0].title}\r\n            amount={props.items[0].amount}\r\n            date={props.items[0].date} />\r\n        <ExpenseItem\r\n            title={props.items[1].title}\r\n            amount={props.items[1].amount}\r\n            date={props.items[1].date} />   \r\n        <ExpenseItem\r\n            title={props.items[2].title}    \r\n            amount={props.items[2].amount}\r\n            date={props.items[2].date} />\r\n        <ExpenseItem\r\n            title={props.items[3].title}\r\n            amount={props.items[3].amount}\r\n            date={props.items[3].date} /> */}\r\n        \r\n    </Card>\r\n\r\n    );\r\n}\r\n\r\nexport default Expenses;","import './ExpenseForm.css'\r\nimport React, {useState} from 'react'\r\n\r\nfunction ExpenseForm(props) {\r\n\r\n    const [enteredTitle, EnteredTitle] = useState('');\r\n    const [enteredAmount,EnteredAmount] = useState('')\r\n    const [enteredDate,EnteredDate] = useState('')\r\n\r\n    // const [enteredValue, changedValue] = useState({\r\n    //     enteredTitle:'',\r\n    //     enteredAmount:'',\r\n    //     enteredDate:''\r\n    // });\r\n\r\n    const titleChangeHandler = (event)=>{\r\n        EnteredTitle(event.target.value);\r\n        // changedValue({\r\n        //     ...enteredValue,                    //keep rest 2 as it is\r\n        //     enteredTitle: event.target.value    //update with new value\r\n        // });\r\n    };\r\n\r\n    const amountChangeHandler = (event)=>{\r\n        EnteredAmount(event.target.value);\r\n        // changedValue({\r\n        //     ...enteredValue,                    //keep rest 2 as it is\r\n        //     enteredAmount: event.target.value    //update with new value\r\n        // });\r\n    };\r\n\r\n    const dateChangeHandler = (event)=>{\r\n        EnteredDate(event.target.value);\r\n        // changedValue({\r\n        //     ...enteredValue,                    //keep rest 2 as it is\r\n        //     enteredDate: event.target.value    //update with new value\r\n        // });\r\n    };\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault();     //inbuild in javascript\r\n        \r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n        \r\n        //console.log(expenseData);\r\n        props.onSaveExpenseData(expenseData);  //execute this pointer to NewExpense.js's 'onSaveExpenseHandler()'\r\n        //above line is just return statement in c++ or java but here we are calling parent .js's function() and passing returning data\r\n        EnteredTitle('');\r\n        EnteredAmount('');\r\n        EnteredDate('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__controls'>\r\n                    <label>Title</label>\r\n                    <input type='text' id='ip' value={enteredTitle} onChange={titleChangeHandler}></input>\r\n                </div>\r\n                <div className='new-expense__controls'>\r\n                    <label>Amount</label>\r\n                    <input type='number' min=\"0.01\" step=\"0.01\" id='ip' value={enteredAmount} onChange={amountChangeHandler}></input>\r\n                </div>\r\n                <div className='new-expense__controls'>\r\n                    <label>Date</label>\r\n                    <input type='date' min=\"2022-01-01\" max=\"2025-01-01\" id='ip' value={enteredDate} onChange={dateChangeHandler}></input>\r\n                </div>\r\n            </div>\r\n            <div className='new-expense__actions'>\r\n                <button type='button' onClick={props.onCancel}>Cancel</button>\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import React,{useState} from 'react' \r\nimport './NewExpense.css'\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nfunction NewExpense(props){\r\n    const [isEditing, setEditing] = useState(false);\r\n    const onSaveExpenseHandler = (fromExpenseForm) =>{\r\n        const expenseData = {\r\n            ...fromExpenseForm,\r\n            id : Math.random().toString()\r\n        };\r\n        //console.log(expenseData);       //now here it will log instead of ExpenseForm.js's log 49 line\r\n        props.onAddExpense(expenseData);\r\n        setEditing(false);              //here also need to add as this should false after adding new expense obj\r\n    };\r\n\r\n    const startEditingHandler = () =>{\r\n        setEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () =>{\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm onSaveExpenseData={onSaveExpenseHandler} onCancel={stopEditingHandler}></ExpenseForm>}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","import Expenses from \"./components/Expense/Expense\";\nimport React,{useState} from \"react\";\nimport NewExpense from './components/NewExpense/NewExpense'\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2022, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2023, 5, 12),\n  },\n];\n\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const myfunc = (expenses) =>{   //\"expenses\" is a new object came from child NewExpense.js to add in current list\n                                  // console.log('data received in App.js');   //now it will print here instead of NewExpress.js\n                                  // console.log(fromNewExpense);\n    \n\n    //---------------important -------------------\"setExpenses\" function can be used when list must have new snapshots along with older snapshots\n\n    setExpenses((prevState) =>{             //\"prevState\" is already existing list objects\n      return [expenses,...prevState];       //[newonj,oldobjlist]\n    });\n  };\n\n  return (\n\n    // JSX SYNTAX\n    <div>\n      {/* child to parent prop */}\n      <NewExpense onAddExpense ={myfunc} ></NewExpense> \n      \n      {/* Parent to child prop*/}\n      <Expenses items={expenses}></Expenses>           \n    </div>\n\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(<App />);\n"],"sourceRoot":""}